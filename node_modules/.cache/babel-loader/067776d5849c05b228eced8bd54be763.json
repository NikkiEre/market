{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Subscribe from '@/components/Subscribe/Subscribe.vue';\nimport Breadcrumbs from '@/components/Breadcrumbs/Breadcrumbs.vue';\nimport Slider from '@/components/Slider/Slider.vue';\nimport DescriptionItem from '@/components/DescriptionItem/DescriptionItem.vue';\nimport Catalog from '@/components/Catalog/Catalog.vue';\nimport { fetchRequest } from '@/api/fetch';\nimport store from '@/store';\nimport Spinner from '@/components/Spinner/Spinner.vue';\nimport ErrorCatalog from '@/components/ErrorCatalog/ErrorCatalog.vue';\nexport default {\n  components: {\n    Subscribe: Subscribe,\n    Breadcrumbs: Breadcrumbs,\n    Slider: Slider,\n    DescriptionItem: DescriptionItem,\n    Catalog: Catalog,\n    Spinner: Spinner,\n    ErrorCatalog: ErrorCatalog\n  },\n  name: \"ItemPage\",\n  data: function data() {\n    return {\n      item: {},\n      catalogItems: [],\n      isLoad: false,\n      isError: false\n    };\n  },\n  created: function created() {\n    this.fetchItemAndCatalog();\n  },\n  methods: {\n    fetchItemAndCatalog: function fetchItemAndCatalog() {\n      var _this = this;\n\n      this.isLoad = true;\n      var fetchCatalog = fetchRequest('products?limit=3').then(function (res) {\n        _this.catalogItems = res;\n      });\n      var fetchItem = fetchRequest(\"products/\".concat(this.$route.params.id)).then(function (res) {\n        _this.item = res;\n      });\n      Promise.all([fetchItem, fetchCatalog]).then(function (res) {\n        _this.isLoad = false;\n      })[\"catch\"](function (err) {\n        _this.isLoad = false;\n        _this.isError = true;\n      });\n    },\n    addToCart: function addToCart(item) {\n      store.dispatch({\n        type: \"actionChangeCart\",\n        dataDispatch: {\n          item: item,\n          typeAction: \"addItemToCart\"\n        }\n      });\n    },\n    moveToItem: function moveToItem(item) {\n      this.$router.push(\"/item\");\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA;AAAAC;AAAAC;AAAAC;AAAAC;AAAAC;AAAAC;AAAAC;AAAA,GADA;AAEAC,kBAFA;AAGAC;AACA;AACAC,cADA;AAEAC,sBAFA;AAGAC,mBAHA;AAIAC;AAJA;AAMA,GAVA;AAWAC;AACA;AACA,GAbA;AAcAC;AACAC;AAAA;;AACA;AACA;AACA;AACA,OAFA;AAGA;AACA;AACA,OAFA;AAGAC;AACA;AACA,OAFA,WAGA;AACA;AACA;AACA,OANA;AAOA,KAhBA;AAiBAC;AACAC;AAAAC;AAAAC;AAAAX;AAAAY;AAAA;AAAA;AACA,KAnBA;AAoBAC;AACA;AACA;AAtBA;AAdA","names":["components","Subscribe","Breadcrumbs","Slider","DescriptionItem","Catalog","Spinner","ErrorCatalog","name","data","item","catalogItems","isLoad","isError","created","methods","fetchItemAndCatalog","Promise","addToCart","store","type","dataDispatch","typeAction","moveToItem"],"sourceRoot":"src/views","sources":["ItemPage.vue"],"sourcesContent":["<template>\n    <section class=\"itempage\">\n        <Breadcrumbs />\n        <Slider \n            :item=\"item\" \n            v-if=\"!isLoad && !isError\"\n        />\n        <div class=\"itempage__description\"\n            v-if=\"!isLoad && !isError\"\n        >\n            <DescriptionItem \n                :item=\"item\"\n                :addToCart=\"addToCart\"\n            />\n        </div>\n        <Spinner \n            v-else-if=\"isLoad && !isError\"\n            v-show=\"isLoad\"\n        />\n        <ErrorCatalog \n            v-else-if=\"isError && !isLoad\"\n        />\n        <div class=\"itempage__catalog\"\n            v-if=\"!isError && !isLoad\"\n        >\n            <Catalog \n                :listItems=\"catalogItems\"\n                :addToCart=\"addToCart\"\n                :moveToItem=\"moveToItem\"\n            />\n        </div>\n        <Subscribe />\n    </section>\n</template>\n\n<script>\nimport Subscribe from '@/components/Subscribe/Subscribe.vue'\nimport Breadcrumbs from '@/components/Breadcrumbs/Breadcrumbs.vue'\nimport Slider from '@/components/Slider/Slider.vue'\nimport DescriptionItem from '@/components/DescriptionItem/DescriptionItem.vue'\nimport Catalog from '@/components/Catalog/Catalog.vue'\nimport { fetchRequest } from '@/api/fetch'\nimport store from '@/store'\nimport Spinner from '@/components/Spinner/Spinner.vue'\nimport ErrorCatalog from '@/components/ErrorCatalog/ErrorCatalog.vue'\n\nexport default {\n  components: { Subscribe, Breadcrumbs, Slider, DescriptionItem, Catalog, Spinner, ErrorCatalog },\n    name: \"ItemPage\",\n    data: function() {\n        return ({\n            item: {},\n            catalogItems: [],\n            isLoad: false,\n            isError: false,\n        })\n    },\n    created: function() {\n        this.fetchItemAndCatalog();\n    },\n    methods: {\n        fetchItemAndCatalog: function() {\n            this.isLoad = true;\n            const fetchCatalog = fetchRequest('products?limit=3').then(res => {\n                this.catalogItems = res; \n            });\n            const fetchItem = fetchRequest(`products/${this.$route.params.id}`).then(res => {\n                this.item = res; \n            });\n            Promise.all([fetchItem, fetchCatalog]).then(res => {\n                this.isLoad = false;\n            })\n            .catch(err => {\n                this.isLoad = false;\n                this.isError = true;\n            });\n        },\n        addToCart: function(item) {\n            store.dispatch({type: \"actionChangeCart\", dataDispatch: {item: item, typeAction: \"addItemToCart\"}});\n        },\n        moveToItem: function(item) {\n            this.$router.push(\"/item\")\n        }\n    }\n}\n</script>\n\n<style lang=\"less\">\n    @import \"../style/variables.less\";\n\n    .itempage {\n        &__catalog {\n           padding-top: 64px;\n           padding-bottom: 128px;\n\n            @media (min-width: @min-tablet-width) and (max-width: @max-tablet-width) {\n                & .catalog-item:last-of-type {\n                    display: none;\n                }\n            }\n        }\n\n        &__description {\n            margin: 0 calc(50% - 525px);\n            top: -64px;\n            position: relative;\n\n            @media (min-width: @min-mobile-width) and (max-width: @max-tablet-width) {\n                top: 0;\n                padding: 0 18px;\n                margin: 0;\n            }\n\n            @media (min-width: @min-mobile-width) and (max-width: @max-mobile-width) {\n                padding: 0 9px;\n            }\n        }\n    }\n</style>"]},"metadata":{},"sourceType":"module"}