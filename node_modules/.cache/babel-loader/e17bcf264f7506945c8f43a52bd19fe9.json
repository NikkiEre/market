{"ast":null,"code":"import _objectSpread from \"/home/nikolay/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Learn/vuejs/market/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Breadcrumbs from '@/components/Breadcrumbs/Breadcrumbs.vue';\nimport CartItemList from '@/components/CartItemList/CartItemList.vue';\nimport FormOrder from '@/components/FormOrder/FormOrder.vue';\nimport CartPrice from '@/components/CartPrice/CartPrice.vue';\nimport store from '@/store';\nexport default {\n  components: {\n    Breadcrumbs: Breadcrumbs,\n    CartItemList: CartItemList,\n    FormOrder: FormOrder,\n    CartPrice: CartPrice\n  },\n  name: \"CartPage\",\n  data: function data() {\n    return {\n      address: {\n        city: '',\n        state: '',\n        zip: ''\n      }\n    };\n  },\n  computed: {\n    cart: function cart() {\n      return store.getters.GET_CART;\n    },\n    cartTotalPrice: function cartTotalPrice() {\n      var totalPrice = 0;\n      this.cart.forEach(function (item) {\n        totalPrice += item.count * item.price;\n      });\n      return totalPrice;\n    }\n  },\n  methods: {\n    removeItem: function removeItem(item) {\n      store.dispatch({\n        type: \"actionChangeCart\",\n        dataDispatch: {\n          item: item,\n          typeAction: \"removeItemFromCart\"\n        }\n      });\n    },\n    clearCart: function clearCart() {\n      store.dispatch({\n        type: \"actionChangeCart\",\n        dataDispatch: {\n          typeAction: \"clearCart\"\n        }\n      });\n    },\n    moveToStartpage: function moveToStartpage() {\n      this.$router.push(\"/\");\n    },\n    changeCartStore: function changeCartStore(item, value) {\n      store.dispatch({\n        type: \"actionChangeCart\",\n        dataDispatch: {\n          item: _objectSpread(_objectSpread({}, item), {}, {\n            count: Number(value) > 0 ? Number(value) : 1\n          }),\n          typeAction: \"changeCart\"\n        }\n      });\n    },\n    saveShippingAddress: function saveShippingAddress() {\n      store.dispatch({\n        type: \"actionChangeCart\",\n        dataDispatch: {\n          address: this.address,\n          typeAction: \"saveShippingAddress\"\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.address = store.getters.GET_SHIPADDRESS;\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AAGA;AACAA;AACAC,4BADA;AAEAC,8BAFA;AAGAC,wBAHA;AAIAC;AAJA,GADA;AAOAC,kBAPA;AAQAC;AACA;AACAC;AACAC,gBADA;AAEAC,iBAFA;AAGAC;AAHA;AADA;AAOA,GAhBA;AAiBAC;AACAC,QADA,kBACA;AACA;AACA,KAHA;AAIAC,kBAJA,4BAIA;AACA;AACA;AACAC;AACA,OAFA;AAGA;AACA;AAVA,GAjBA;AA6BAC;AACAC,cADA,sBACAC,IADA,EACA;AACAC;AAAAC;AAAAC;AAAAH;AAAAI;AAAA;AAAA;AACA,KAHA;AAIAC,aAJA,uBAIA;AACAJ;AAAAC;AAAAC;AAAAC;AAAA;AAAA;AACA,KANA;AAOAE,mBAPA,6BAOA;AACA;AACA,KATA;AAUAC;AACAN;AAAAC;AAAAC;AAAAH;AAAAQ;AAAA;AAAAJ;AAAA;AAAA;AACA,KAZA;AAaAK;AACAR;AAAAC;AAAAC;AAAAb;AAAAc;AAAA;AAAA;AACA;AAfA,GA7BA;AA8CAM;AACA;AACA;AAhDA","names":["components","Breadcrumbs","CartItemList","FormOrder","CartPrice","name","data","address","city","state","zip","computed","cart","cartTotalPrice","totalPrice","methods","removeItem","item","store","type","dataDispatch","typeAction","clearCart","moveToStartpage","changeCartStore","count","saveShippingAddress","created"],"sourceRoot":"src/views","sources":["CartPage.vue"],"sourcesContent":["<template>\n    <section class=\"cartpage\">\n        <Breadcrumbs />\n        <div class=\"container__page cartpage__cart\">\n            <CartItemList \n                :cart=\"cart\"\n                :removeItem=\"removeItem\"\n                :clearCart=\"clearCart\"\n                :moveToStartpage=\"moveToStartpage\"\n                :changeCartStore=\"changeCartStore\"\n            />\n            <div class=\"cartpage__details\">\n                <FormOrder \n                    :address=\"address\"\n                    :saveShippingAddress=\"saveShippingAddress\"\n                />\n                <CartPrice \n                    :cartTotalPrice=\"cartTotalPrice\"\n                />\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nimport Breadcrumbs from '@/components/Breadcrumbs/Breadcrumbs.vue'\nimport CartItemList from '@/components/CartItemList/CartItemList.vue'\nimport FormOrder from '@/components/FormOrder/FormOrder.vue'\nimport CartPrice from '@/components/CartPrice/CartPrice.vue'\nimport store from '@/store'\n\n\nexport default {\n    components: { \n        Breadcrumbs,\n        CartItemList,\n        FormOrder,\n        CartPrice\n    },\n    name: \"CartPage\",\n    data: function() {\n        return ({\n            address: {\n                city: '',\n                state: '',\n                zip: ''\n            }\n        })\n    },\n    computed: {\n        cart() {\n            return store.getters.GET_CART;\n        },\n        cartTotalPrice() {\n            let totalPrice = 0;\n            this.cart.forEach((item) => {\n                totalPrice += item.count * item.price\n            });\n            return totalPrice; \n        }\n    },\n    methods: {\n        removeItem(item) {\n            store.dispatch({type: \"actionChangeCart\", dataDispatch: {item: item, typeAction: \"removeItemFromCart\"}});\n        },\n        clearCart() {\n            store.dispatch({type: \"actionChangeCart\", dataDispatch: {typeAction: \"clearCart\"}});\n        },\n        moveToStartpage() {\n            this.$router.push(\"/\");\n        },\n        changeCartStore: function(item, value) {\n            store.dispatch({type: \"actionChangeCart\", dataDispatch: {item: {...item, count: Number(value) > 0 ? Number(value) : 1}, typeAction: \"changeCart\"}});\n        },\n        saveShippingAddress: function() {\n            store.dispatch({type: \"actionChangeCart\", dataDispatch: {address: this.address, typeAction: \"saveShippingAddress\"}});\n        },\n    },\n    created: function () {\n        this.address = store.getters.GET_SHIPADDRESS;\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n    @import \"../style/variables.less\";\n\n    .cartpage__cart {\n        padding-top: 96px;\n        padding-bottom: 96px;\n        display: flex;\n        justify-content: space-between;\n\n        @media (min-width: @min-mobile-width) and (max-width: @max-tablet-width) {\n            flex-direction: column;\n        }\n    }\n\n    .cartpage__details{\n        width: 360px;\n        display: flex;\n        flex-direction: column;\n        gap: 57px;\n\n        @media (min-width: @min-mobile-width) and (max-width: @max-tablet-width) {\n            width: 100%;\n            gap: 20px;\n        }\n\n        @media (min-width: @max-mobile-width) and (max-width: @max-tablet-width) {\n            flex-direction: row;\n        }\n    }\n</style>"]},"metadata":{},"sourceType":"module"}